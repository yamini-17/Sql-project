CREATE DATABASE PRACTISE;
USE PRACTISE;

CREATE TABLE STUDENTS(
STUDENT_ID INT PRIMARY KEY,
NAME VARCHAR(50),
AGE INT,
GENDER VARCHAR(15),
GRADE VARCHAR(5) )

INSERT INTO STUDENTS(STUDENT_ID,NAME,AGE,GENDER,GRADE)
VALUES
(1,'JOHN',20,'MALE','B'),
(2,'JULY',21,'FEMALE','A'),
(3,'KAVI',19,'FEMALE','O'),
(4,'KAVIN',22,'MALE','O'),
(5,'RAGI',20,'FEMALE','B');

#TOTAL STUDENTS
SELECT * FROM STUDENTS

#SELECT STUDENTS WHO HAS THE GRADE B
SELECT * FROM STUDENTS WHERE GRADE =  'B';

#SELECT THE STUDENTS WHO HAS AGE  GREATER THAN 19
SELECT * FROM STUDENTS WHERE AGE > 19;

#ARRANGE THE NAME OF STUDENTS IN DESCENDING
SELECT * FROM STUDENTS ORDER BY NAME DESC;

#INSERT
INSERT INTO STUDENTS (STUDENT_ID,NAME,AGE,GENDER,GRADE) VALUES (6,'ROHAN',22,'MALE','O')

SELECT * FROM STUDENTS

#UPDATE 
UPDATE STUDENTS
SET GRADE = 'C'
WHERE STUDENT_ID = 2;

SELECT * FROM STUDENTS

#DELETE
DELETE FROM STUDENTS
WHERE STUDENT_ID = 6;

SELECT * FROM STUDENTS

CREATE TABLE COURSE1(
    COURSE_ID INT PRIMARY KEY,
    COURSENAME VARCHAR(50),
    STUDENT_ID INT,
    MARKS INT
)

INSERT INTO COURSE1(COURSE_ID, COURSENAME, STUDENT_ID,MARKS)
VALUES
(101, 'Math', 1, 70),
(102, 'Science', 2, 80),
(103, 'History', 1, 90),
(104, 'English', 3, 75),
(105, 'Tamil',  4, 60),
(106,  'English', 5, 55);

SELECT * FROM COURSE1

#AGGREGATION (SUM,COUNT,MAX,MIN,AVG)
SELECT COUNT(*) AS TOTALSTUDENTS  FROM STUDENTS

SELECT COUNT(*) AS TOTALCOURSE FROM COURSE

SELECT AVG(MARKS) AS AVERAGEMARK FROM COURSE1

SELECT MAX(AGE) AS MAXIMUMAGE FROM STUDENTS

SELECT MIN(AGE) AS MINIMUMAGE FROM STUDENTS

SELECT SUM(MARKS) AS TOTALMARKS FROM COURSE1

# GROUPBY 
#COUNT STUDENTS BY GENDER
SELECT GENDER, COUNT(*) AS TOTALSTUDENTS FROM STUDENTS
GROUP BY GENDER;

#TOTAL STUDENTS BY GRADE
SELECT COURSENAME  ,COUNT(*) AS TOTALCOURSE FROM COURSE1 
GROUP BY COURSENAME

#AVERAGE STUDENTS BY GRADE
SELECT GRADE, AVG(STUDENT_ID) AS AVERAGESTUDENT FROM STUDENTS
GROUP BY GRADE;

#JOINS(INNER,LEFT,RIGHT,FUL JOIN)
SELECT STUDENTS.NAME , COURSE1.COURSENAME 
FROM STUDENTS
INNER JOIN 
COURSE1 ON  STUDENTS.STUDENT_ID = COURSE1.STUDENT_ID

SELECT STUDENTS.AGE, COURSE1.MARKS 
FROM STUDENTS
LEFT JOIN
COURSE1 ON STUDENTS.STUDENT_ID = COURSE1.STUDENT_ID

SELECT C.COURSE_ID,C.COURSENAME,C.MARKS,S.GENDER
FROM COURSE1 C
RIGHT JOIN
STUDENTS S ON S.STUDENT_ID = C.STUDENT_ID;

#SUBQUERIES
SELECT NAME, AGE
FROM STUDENTS
WHERE GRADE > 'B';

#HAVING
SELECT STUDENT_ID,COURSENAME
FROM COURSE1
WHERE (SELECT COUNT(*) AS TOTALCOURSE FROM COURSE)

#CASE
SELECT STUDENT_ID, MARKS,
    CASE 
        WHEN MARKS >= 90 THEN 'High'
        WHEN MARKS BETWEEN 80 AND 70 THEN 'Medium'
        ELSE 'Low'
    END AS MARKCategory
FROM PRACTISE.COURSE1;
